<import src="../empty-box/empty-box.axml" />
<view class="container">
    <!--  -->
    <scroll-view class="scroll-view1" scroll-y="{{true}}" onScrollToUpper="onScrollToUpper" onScrollToLower="onScrollToLower"
        onScroll="onScroll" upper-threshold='0' lower-threshold='0'>
        <view style="
            background:green;height:600rpx;">

            <scroll-view class="scroll-view2" scroll-y="{{true}}" onScrollToUpper="onScrollToUpper" onScrollToLower="onScrollToLower"
                onScroll="onScroll" upper-threshold='0' lower-threshold='0'>
                <view style="
            background:red;height:400rpx;">1111
                </view>
            </scroll-view>
            22222211
        </view>

    </scroll-view>


    <view class="
        shop-header">
        <view class="parent11">
            <text class="title11">铺名称铺名名称铺名名名名称铺名名称铺名名称铺名店铺称店铺名称</text>
        </view>
    </view>



    <text class="two-line">数据很多数据很据很多数据很据很多数据很据很多数据很多数据很多数据很多数据很多数据很多数据据很多数据很多数据很多数据很多数据很多数据很多</text>
    <view class="testParent">
        <view class="v1">1</view>
        <view class="v2">数据很多数据很多数据很多数据很多数据很多数据很多数据很多数据很多数据很多数据很多</view>
        <view class="v3">3</view>
    </view>


    <view class="parent">
        <text class="myTestText">Hello text</text>
        <view class="myTestView">Hello view</view>
        <view class="myTestView2">1111</view>
        <view class="parent1">
            <text class="testText">数据很多数据很多数据很多数据很多数据很多数据很多数据很多数据很多数据很多数据很多</text>
        </view>
    </view>


    <view>
        <input placeholder="textarea placeholder" placeholder-style="color: red;" auto-focus=true @focus="onFocus"
            @input="onInput" @blur="onBlur" />
    </view>

    <text class="text">Hello {{title}}</text>
    <text id="firstName">{{name}}{{noDefined}}</text>
    <button onTap="onBtnClicked">Click me!</button>
    <text class="title">列表渲染</text>
    <view class="item" a:for="{{items}}">{{item}}</view>
    <text class="title">遍历index</text>
    <view class="item" a:for="{{array}}">
        {{index}}:{{item.message}}
    </view>
    <text class="title">自定义下标和index名字</text>
    <view class="item" a:for="{{array}}" a:for-index="idx" a:for-item="itemName">
        {{idx}}: {{itemName.message}}
    </view>
    <text class="title">a:for嵌套</text>
    <view a:for="{{[1, 2, 3, 4]}}" a:for-item="i">
        <view a:for="{{[1, 2, 3, 4]}}" a:for-item="j">
            <view class="item" a:if="{{i <= j}}">
                {{i}} * {{j}} = {{i * j}}
            </view>
        </view>
    </view>
    <text class="title">条件渲染</text>
    <view a:if="{{view == 'WebView'}}">WebView</view>
    <view a:if="{{view == 'APP'}}">APP</view>
    <view a:if="{{view == 'alibaba'}}">alibaba</view>
    <text class="title">block a:for</text>
    <block a:for="{{[1, 2, 3]}}">
        <view class="item"> {{index}}: {{item}}</view>
    </block>
    <text class="title">a:for</text>
    <view a:for="{{list}}" a:key="{{item}}">
        <view class="item" onTap="bringToFront" data-value="{{item}}">
            {{item}}: click to bring to front
        </view>
    </view>
    <text class="title">自定义Component</text>
    <customText extra="父组件传递的属性" :testMethod="testMethod" data="{{...obj1}}">
        默认插槽
    </customText>
    <text class="title">引入axml第一种方式：include</text>
    <include src="../header/header.axml" />
    <view> body</view>
    <include src="../xml/footer.axml" />
    <text class="title">引入axml第二种方式：import</text>
    <import src="../xml/item.axml" />
    <template is="item" data="{{text: 'forbar'}}" />


    <template is="box" data="{{temTitle,temText}}" />

    <text class="title">条件渲染 a:if</text>
    <view a:if="{{condation}}">True</view>
    <text class="title">条件渲染 a:if a:elif a:else</text>
    <view a:if="{{length > 5}}"> 1 </view>
    <view a:elif="{{length > 2}}"> 2 </view>
    <view a:else> 3 </view>
    <text class="title">条件渲染 block a:if</text>
    <block a:if="{{true}}">
        <view> block 并不是一个组件，仅仅是一个包装元素，不会在页面中做任何渲染，只接受控制属性 </view>
        <view class="item"> view2 </view>
    </block>
    <text class="title">模板demo1</text>
    <import src="../xml/msgItem.axml" />
    <template is="msgItem" data="{{item}}" />
    <text class="title">模板demo2</text>
    <import src="../xml/odd.axml" />
    <import src="../xml/even.axml" />
    <block a:for="{{[1, 2, 3, 4, 5]}}">
        <template is="{{item % 2 == 0 ? 'even' : 'odd'}}" />
    </block>
    <text class="title">View事件</text>
    <view id="tapTest" data-hello="Alibaba" onClick="tapName">
        dataset Object 绑定事件的组件上由 data- 开头的自定义属性的集合
        <view id="tapTestInner" data-hi="Taobao">
            Click me!
        </view>
    </view>

    <text class="title">冒泡和阻止冒泡</text>
    <view id="outter" onClick="handleTap1">
        view1
        <view id="middle" onClick="handleTap2">
            view2
            <view id="inner" onClick="handleTap3" data-hi="hi" data-hello="hello">
                view3
            </view>
        </view>
    </view>
</view>